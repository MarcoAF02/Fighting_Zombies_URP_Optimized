//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.2
//     from Assets/Input_Actions/Input_Tables/FPS_Play_Action.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @FPS_Play_Action: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FPS_Play_Action()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FPS_Play_Action"",
    ""maps"": [
        {
            ""name"": ""GamePlay_Keyboard_And_Mouse"",
            ""id"": ""fa6b82b7-51bb-4a4b-80b8-eceed3361fa5"",
            ""actions"": [
                {
                    ""name"": ""Player_Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""5927c355-4af8-46ea-9a28-f81e03b7e794"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player_Movement"",
                    ""type"": ""Value"",
                    ""id"": ""4bd1a365-1fd5-4bb4-a763-eb9b6cd8a3af"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player_MoveForward"",
                    ""type"": ""Button"",
                    ""id"": ""f91e143f-1b02-480b-bad1-3c2a0a6a0813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_MoveBack"",
                    ""type"": ""Button"",
                    ""id"": ""51ad834f-077f-45d2-a3d2-cf26abaaf875"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Run"",
                    ""type"": ""Button"",
                    ""id"": ""a2098fc2-225c-407f-8a96-8c7f289bd2dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""4ed74c51-b551-4f11-b652-501b87376c14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Aim"",
                    ""type"": ""Button"",
                    ""id"": ""f29d84b8-701e-46ab-b651-b853bad823b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""f1542aef-c33a-4a22-8da9-89e5e10b20c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Reload"",
                    ""type"": ""Button"",
                    ""id"": ""c88acbdb-f442-4b75-bbb0-5554ccc1b79f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_SwitchToPrimaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""9de9b798-84fa-4ed8-bc2e-3911558e75ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_SwitchToSecondaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""a5f7652c-8249-46a0-8de2-dd306ff91319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_SwitchToMeleeWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""9b9150f5-adc4-431a-939d-e33e3fb1a1c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_SwitchToMedicine"",
                    ""type"": ""Button"",
                    ""id"": ""41eb5a42-a043-4b38-8c37-14888264348c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_Interactive"",
                    ""type"": ""Button"",
                    ""id"": ""7a2915c7-dbf4-4d6f-9aa2-b6a2674d0446"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Player_Rotate"",
                    ""id"": ""984423d7-71e7-4111-b328-0c8675b2194d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0065d546-7f41-4ca3-a8ba-f50505ee142d"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3ffea69c-da58-46e7-84c4-5966dd53010e"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0a339122-445c-4818-9159-c7646d1cac26"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""79e10533-0844-424e-a5bc-6820a84e34a5"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3ba6e845-8076-45b3-9cc2-9fd0279a66fd"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Player_Movement"",
                    ""id"": ""0f4892f2-8609-42d7-a51c-72b772582d2a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""27e85fd1-35fa-4b7d-8b9a-033c0711c931"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7722e3c8-5226-4e50-b933-344dfb1c21af"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8925616c-a958-409a-b863-f5d6dc309a8b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a933313-c0ab-4cc4-9ba8-5fed21dcd987"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7961b20a-4287-48c1-a6a6-f734b7fc3163"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5c9512d-f9f5-4fec-960e-13a4ba1eba06"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_MoveBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952331c1-d161-456a-aade-10284d8d75c3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a57b0194-2ef8-4974-ad31-3e20a2169830"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb471dcd-68b6-4d07-b8e7-2d5802a203db"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff2cfaf4-4d3b-43d1-a8e9-c34718aa2442"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_SwitchToPrimaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba7430d0-03d2-4f83-aaf7-8d1fdd482d02"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_SwitchToSecondaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebd3a5b0-2297-4f17-89d6-12982d4e120b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_SwitchToMeleeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3631121c-8899-4c1a-9313-ea19b584ab3b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_SwitchToMedicine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd11b1ac-c859-49ba-9ea7-220f5bf87b47"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_Interactive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d65bfd0-be53-465d-8558-3bb0bb6105a5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_MoveForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI_Keyboard_And_Mouse"",
            ""id"": ""45096103-45b7-4b22-9164-c3d0c091d273"",
            ""actions"": [
                {
                    ""name"": ""Mouse_Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""8644edf5-8e99-4889-8b6e-8148604370c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse_Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""6c11a0c2-b33f-4185-99f3-1b99ebb8f997"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""2ccd1a04-950b-4d0f-83be-11fa9e072d0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player_OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""13d6f851-3902-4361-aa6f-52fb9b8ec68d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3258c25-4495-410b-aa76-e0e939249193"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse_Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72071d05-afa7-4d92-b44c-2089a5ff8024"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse_Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b14911c-1419-4a30-94e9-614278be3ac5"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba0f071f-0232-4c6b-abb0-0b8fb7375678"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player_OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlay_Keyboard_And_Mouse
        m_GamePlay_Keyboard_And_Mouse = asset.FindActionMap("GamePlay_Keyboard_And_Mouse", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Rotate = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Rotate", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Movement = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Movement", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_MoveForward = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_MoveForward", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_MoveBack = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_MoveBack", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Run = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Run", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Crouch = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Crouch", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Aim = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Aim", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Shoot = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Shoot", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Reload = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Reload", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_SwitchToPrimaryWeapon = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_SwitchToPrimaryWeapon", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_SwitchToSecondaryWeapon = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_SwitchToSecondaryWeapon", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMeleeWeapon = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_SwitchToMeleeWeapon", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMedicine = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_SwitchToMedicine", throwIfNotFound: true);
        m_GamePlay_Keyboard_And_Mouse_Player_Interactive = m_GamePlay_Keyboard_And_Mouse.FindAction("Player_Interactive", throwIfNotFound: true);
        // UI_Keyboard_And_Mouse
        m_UI_Keyboard_And_Mouse = asset.FindActionMap("UI_Keyboard_And_Mouse", throwIfNotFound: true);
        m_UI_Keyboard_And_Mouse_Mouse_Confirm = m_UI_Keyboard_And_Mouse.FindAction("Mouse_Confirm", throwIfNotFound: true);
        m_UI_Keyboard_And_Mouse_Mouse_Cancel = m_UI_Keyboard_And_Mouse.FindAction("Mouse_Cancel", throwIfNotFound: true);
        m_UI_Keyboard_And_Mouse_Player_OpenInventory = m_UI_Keyboard_And_Mouse.FindAction("Player_OpenInventory", throwIfNotFound: true);
        m_UI_Keyboard_And_Mouse_Player_OpenPauseMenu = m_UI_Keyboard_And_Mouse.FindAction("Player_OpenPauseMenu", throwIfNotFound: true);
    }

    ~@FPS_Play_Action()
    {
        Debug.Assert(!m_GamePlay_Keyboard_And_Mouse.enabled, "This will cause a leak and performance issues, FPS_Play_Action.GamePlay_Keyboard_And_Mouse.Disable() has not been called.");
        Debug.Assert(!m_UI_Keyboard_And_Mouse.enabled, "This will cause a leak and performance issues, FPS_Play_Action.UI_Keyboard_And_Mouse.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay_Keyboard_And_Mouse
    private readonly InputActionMap m_GamePlay_Keyboard_And_Mouse;
    private List<IGamePlay_Keyboard_And_MouseActions> m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces = new List<IGamePlay_Keyboard_And_MouseActions>();
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Rotate;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Movement;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_MoveForward;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_MoveBack;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Run;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Crouch;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Aim;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Shoot;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Reload;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_SwitchToPrimaryWeapon;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_SwitchToSecondaryWeapon;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMeleeWeapon;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMedicine;
    private readonly InputAction m_GamePlay_Keyboard_And_Mouse_Player_Interactive;
    public struct GamePlay_Keyboard_And_MouseActions
    {
        private @FPS_Play_Action m_Wrapper;
        public GamePlay_Keyboard_And_MouseActions(@FPS_Play_Action wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player_Rotate => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Rotate;
        public InputAction @Player_Movement => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Movement;
        public InputAction @Player_MoveForward => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_MoveForward;
        public InputAction @Player_MoveBack => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_MoveBack;
        public InputAction @Player_Run => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Run;
        public InputAction @Player_Crouch => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Crouch;
        public InputAction @Player_Aim => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Aim;
        public InputAction @Player_Shoot => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Shoot;
        public InputAction @Player_Reload => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Reload;
        public InputAction @Player_SwitchToPrimaryWeapon => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_SwitchToPrimaryWeapon;
        public InputAction @Player_SwitchToSecondaryWeapon => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_SwitchToSecondaryWeapon;
        public InputAction @Player_SwitchToMeleeWeapon => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMeleeWeapon;
        public InputAction @Player_SwitchToMedicine => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_SwitchToMedicine;
        public InputAction @Player_Interactive => m_Wrapper.m_GamePlay_Keyboard_And_Mouse_Player_Interactive;
        public InputActionMap Get() { return m_Wrapper.m_GamePlay_Keyboard_And_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlay_Keyboard_And_MouseActions set) { return set.Get(); }
        public void AddCallbacks(IGamePlay_Keyboard_And_MouseActions instance)
        {
            if (instance == null || m_Wrapper.m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces.Add(instance);
            @Player_Rotate.started += instance.OnPlayer_Rotate;
            @Player_Rotate.performed += instance.OnPlayer_Rotate;
            @Player_Rotate.canceled += instance.OnPlayer_Rotate;
            @Player_Movement.started += instance.OnPlayer_Movement;
            @Player_Movement.performed += instance.OnPlayer_Movement;
            @Player_Movement.canceled += instance.OnPlayer_Movement;
            @Player_MoveForward.started += instance.OnPlayer_MoveForward;
            @Player_MoveForward.performed += instance.OnPlayer_MoveForward;
            @Player_MoveForward.canceled += instance.OnPlayer_MoveForward;
            @Player_MoveBack.started += instance.OnPlayer_MoveBack;
            @Player_MoveBack.performed += instance.OnPlayer_MoveBack;
            @Player_MoveBack.canceled += instance.OnPlayer_MoveBack;
            @Player_Run.started += instance.OnPlayer_Run;
            @Player_Run.performed += instance.OnPlayer_Run;
            @Player_Run.canceled += instance.OnPlayer_Run;
            @Player_Crouch.started += instance.OnPlayer_Crouch;
            @Player_Crouch.performed += instance.OnPlayer_Crouch;
            @Player_Crouch.canceled += instance.OnPlayer_Crouch;
            @Player_Aim.started += instance.OnPlayer_Aim;
            @Player_Aim.performed += instance.OnPlayer_Aim;
            @Player_Aim.canceled += instance.OnPlayer_Aim;
            @Player_Shoot.started += instance.OnPlayer_Shoot;
            @Player_Shoot.performed += instance.OnPlayer_Shoot;
            @Player_Shoot.canceled += instance.OnPlayer_Shoot;
            @Player_Reload.started += instance.OnPlayer_Reload;
            @Player_Reload.performed += instance.OnPlayer_Reload;
            @Player_Reload.canceled += instance.OnPlayer_Reload;
            @Player_SwitchToPrimaryWeapon.started += instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToPrimaryWeapon.performed += instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToPrimaryWeapon.canceled += instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToSecondaryWeapon.started += instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToSecondaryWeapon.performed += instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToSecondaryWeapon.canceled += instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToMeleeWeapon.started += instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMeleeWeapon.performed += instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMeleeWeapon.canceled += instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMedicine.started += instance.OnPlayer_SwitchToMedicine;
            @Player_SwitchToMedicine.performed += instance.OnPlayer_SwitchToMedicine;
            @Player_SwitchToMedicine.canceled += instance.OnPlayer_SwitchToMedicine;
            @Player_Interactive.started += instance.OnPlayer_Interactive;
            @Player_Interactive.performed += instance.OnPlayer_Interactive;
            @Player_Interactive.canceled += instance.OnPlayer_Interactive;
        }

        private void UnregisterCallbacks(IGamePlay_Keyboard_And_MouseActions instance)
        {
            @Player_Rotate.started -= instance.OnPlayer_Rotate;
            @Player_Rotate.performed -= instance.OnPlayer_Rotate;
            @Player_Rotate.canceled -= instance.OnPlayer_Rotate;
            @Player_Movement.started -= instance.OnPlayer_Movement;
            @Player_Movement.performed -= instance.OnPlayer_Movement;
            @Player_Movement.canceled -= instance.OnPlayer_Movement;
            @Player_MoveForward.started -= instance.OnPlayer_MoveForward;
            @Player_MoveForward.performed -= instance.OnPlayer_MoveForward;
            @Player_MoveForward.canceled -= instance.OnPlayer_MoveForward;
            @Player_MoveBack.started -= instance.OnPlayer_MoveBack;
            @Player_MoveBack.performed -= instance.OnPlayer_MoveBack;
            @Player_MoveBack.canceled -= instance.OnPlayer_MoveBack;
            @Player_Run.started -= instance.OnPlayer_Run;
            @Player_Run.performed -= instance.OnPlayer_Run;
            @Player_Run.canceled -= instance.OnPlayer_Run;
            @Player_Crouch.started -= instance.OnPlayer_Crouch;
            @Player_Crouch.performed -= instance.OnPlayer_Crouch;
            @Player_Crouch.canceled -= instance.OnPlayer_Crouch;
            @Player_Aim.started -= instance.OnPlayer_Aim;
            @Player_Aim.performed -= instance.OnPlayer_Aim;
            @Player_Aim.canceled -= instance.OnPlayer_Aim;
            @Player_Shoot.started -= instance.OnPlayer_Shoot;
            @Player_Shoot.performed -= instance.OnPlayer_Shoot;
            @Player_Shoot.canceled -= instance.OnPlayer_Shoot;
            @Player_Reload.started -= instance.OnPlayer_Reload;
            @Player_Reload.performed -= instance.OnPlayer_Reload;
            @Player_Reload.canceled -= instance.OnPlayer_Reload;
            @Player_SwitchToPrimaryWeapon.started -= instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToPrimaryWeapon.performed -= instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToPrimaryWeapon.canceled -= instance.OnPlayer_SwitchToPrimaryWeapon;
            @Player_SwitchToSecondaryWeapon.started -= instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToSecondaryWeapon.performed -= instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToSecondaryWeapon.canceled -= instance.OnPlayer_SwitchToSecondaryWeapon;
            @Player_SwitchToMeleeWeapon.started -= instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMeleeWeapon.performed -= instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMeleeWeapon.canceled -= instance.OnPlayer_SwitchToMeleeWeapon;
            @Player_SwitchToMedicine.started -= instance.OnPlayer_SwitchToMedicine;
            @Player_SwitchToMedicine.performed -= instance.OnPlayer_SwitchToMedicine;
            @Player_SwitchToMedicine.canceled -= instance.OnPlayer_SwitchToMedicine;
            @Player_Interactive.started -= instance.OnPlayer_Interactive;
            @Player_Interactive.performed -= instance.OnPlayer_Interactive;
            @Player_Interactive.canceled -= instance.OnPlayer_Interactive;
        }

        public void RemoveCallbacks(IGamePlay_Keyboard_And_MouseActions instance)
        {
            if (m_Wrapper.m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGamePlay_Keyboard_And_MouseActions instance)
        {
            foreach (var item in m_Wrapper.m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GamePlay_Keyboard_And_MouseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GamePlay_Keyboard_And_MouseActions @GamePlay_Keyboard_And_Mouse => new GamePlay_Keyboard_And_MouseActions(this);

    // UI_Keyboard_And_Mouse
    private readonly InputActionMap m_UI_Keyboard_And_Mouse;
    private List<IUI_Keyboard_And_MouseActions> m_UI_Keyboard_And_MouseActionsCallbackInterfaces = new List<IUI_Keyboard_And_MouseActions>();
    private readonly InputAction m_UI_Keyboard_And_Mouse_Mouse_Confirm;
    private readonly InputAction m_UI_Keyboard_And_Mouse_Mouse_Cancel;
    private readonly InputAction m_UI_Keyboard_And_Mouse_Player_OpenInventory;
    private readonly InputAction m_UI_Keyboard_And_Mouse_Player_OpenPauseMenu;
    public struct UI_Keyboard_And_MouseActions
    {
        private @FPS_Play_Action m_Wrapper;
        public UI_Keyboard_And_MouseActions(@FPS_Play_Action wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mouse_Confirm => m_Wrapper.m_UI_Keyboard_And_Mouse_Mouse_Confirm;
        public InputAction @Mouse_Cancel => m_Wrapper.m_UI_Keyboard_And_Mouse_Mouse_Cancel;
        public InputAction @Player_OpenInventory => m_Wrapper.m_UI_Keyboard_And_Mouse_Player_OpenInventory;
        public InputAction @Player_OpenPauseMenu => m_Wrapper.m_UI_Keyboard_And_Mouse_Player_OpenPauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_UI_Keyboard_And_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UI_Keyboard_And_MouseActions set) { return set.Get(); }
        public void AddCallbacks(IUI_Keyboard_And_MouseActions instance)
        {
            if (instance == null || m_Wrapper.m_UI_Keyboard_And_MouseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UI_Keyboard_And_MouseActionsCallbackInterfaces.Add(instance);
            @Mouse_Confirm.started += instance.OnMouse_Confirm;
            @Mouse_Confirm.performed += instance.OnMouse_Confirm;
            @Mouse_Confirm.canceled += instance.OnMouse_Confirm;
            @Mouse_Cancel.started += instance.OnMouse_Cancel;
            @Mouse_Cancel.performed += instance.OnMouse_Cancel;
            @Mouse_Cancel.canceled += instance.OnMouse_Cancel;
            @Player_OpenInventory.started += instance.OnPlayer_OpenInventory;
            @Player_OpenInventory.performed += instance.OnPlayer_OpenInventory;
            @Player_OpenInventory.canceled += instance.OnPlayer_OpenInventory;
            @Player_OpenPauseMenu.started += instance.OnPlayer_OpenPauseMenu;
            @Player_OpenPauseMenu.performed += instance.OnPlayer_OpenPauseMenu;
            @Player_OpenPauseMenu.canceled += instance.OnPlayer_OpenPauseMenu;
        }

        private void UnregisterCallbacks(IUI_Keyboard_And_MouseActions instance)
        {
            @Mouse_Confirm.started -= instance.OnMouse_Confirm;
            @Mouse_Confirm.performed -= instance.OnMouse_Confirm;
            @Mouse_Confirm.canceled -= instance.OnMouse_Confirm;
            @Mouse_Cancel.started -= instance.OnMouse_Cancel;
            @Mouse_Cancel.performed -= instance.OnMouse_Cancel;
            @Mouse_Cancel.canceled -= instance.OnMouse_Cancel;
            @Player_OpenInventory.started -= instance.OnPlayer_OpenInventory;
            @Player_OpenInventory.performed -= instance.OnPlayer_OpenInventory;
            @Player_OpenInventory.canceled -= instance.OnPlayer_OpenInventory;
            @Player_OpenPauseMenu.started -= instance.OnPlayer_OpenPauseMenu;
            @Player_OpenPauseMenu.performed -= instance.OnPlayer_OpenPauseMenu;
            @Player_OpenPauseMenu.canceled -= instance.OnPlayer_OpenPauseMenu;
        }

        public void RemoveCallbacks(IUI_Keyboard_And_MouseActions instance)
        {
            if (m_Wrapper.m_UI_Keyboard_And_MouseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUI_Keyboard_And_MouseActions instance)
        {
            foreach (var item in m_Wrapper.m_UI_Keyboard_And_MouseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UI_Keyboard_And_MouseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UI_Keyboard_And_MouseActions @UI_Keyboard_And_Mouse => new UI_Keyboard_And_MouseActions(this);
    public interface IGamePlay_Keyboard_And_MouseActions
    {
        void OnPlayer_Rotate(InputAction.CallbackContext context);
        void OnPlayer_Movement(InputAction.CallbackContext context);
        void OnPlayer_MoveForward(InputAction.CallbackContext context);
        void OnPlayer_MoveBack(InputAction.CallbackContext context);
        void OnPlayer_Run(InputAction.CallbackContext context);
        void OnPlayer_Crouch(InputAction.CallbackContext context);
        void OnPlayer_Aim(InputAction.CallbackContext context);
        void OnPlayer_Shoot(InputAction.CallbackContext context);
        void OnPlayer_Reload(InputAction.CallbackContext context);
        void OnPlayer_SwitchToPrimaryWeapon(InputAction.CallbackContext context);
        void OnPlayer_SwitchToSecondaryWeapon(InputAction.CallbackContext context);
        void OnPlayer_SwitchToMeleeWeapon(InputAction.CallbackContext context);
        void OnPlayer_SwitchToMedicine(InputAction.CallbackContext context);
        void OnPlayer_Interactive(InputAction.CallbackContext context);
    }
    public interface IUI_Keyboard_And_MouseActions
    {
        void OnMouse_Confirm(InputAction.CallbackContext context);
        void OnMouse_Cancel(InputAction.CallbackContext context);
        void OnPlayer_OpenInventory(InputAction.CallbackContext context);
        void OnPlayer_OpenPauseMenu(InputAction.CallbackContext context);
    }
}
